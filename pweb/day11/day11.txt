day11 笔记

http server + 框架结构

前端 前台 客户端 用户端
1.和用户进行交互，获取用户的请求
2.和后端进行通信，整理用户请求给后端
3.接收后端的内容，展现给用户

要求：
1.有良好的用户体验
2.较强全面的交互能力
3.必要的优化
4.良好的跨平台性能

后端 后台 服务端
功能：
1.接收前端的请求
2.进行逻辑处理和运算处理
3.和磁盘进行交互（数据库，文件）
4.进行数据的整理，更好的向前端返回结果

要求：
1.良好的管理方案或者界面
2.更好的并发性
3.更快速的处理速度（良好的算法逻辑）
4.更好的健壮性
5.更好的可维护性和扩展性
6.选择更加合适的技术搭配和框架

网站后端
httpserver: 接收http请求(socket通信)
			解析http请求(GET or Post)
			将具体的请求整理交给后端服务程序
			接收服务端返回的结果
			将结果发送给客户端

后端服务程序：接收具体的HTTP请求
			逻辑处理请求（数据库交互）
			将处理结果给httpserver

cookie:
	1.什么是框架
	框架即开发模板，通过填写不同的内容可以完成快捷的开发

	2.__call__()使用
	在类中__call__()方法在实例对象使用()时会自动调用执行
	这个实例对象可以像函数一样使用并传参。
	class CallTest:
		def __call__(self,a,b):
			print('This is call test',a,b)

	c = CallTest()
	c(1,2)

	3.path.startwith('/static')

	4.d= {'a':1,'b':3}
	d.get('a','b')
	如果存在a键，返回a对应的值
	如果不存在a键，返回b对应的值

httpserver:
	技术点：使用并发效果，多进程或者多线程
		   套接字 tcp套接字

	后端框架：所有功能封装为类
			请求分为两种，一种是请求静态页面
						一中是请求后端程序处理
	        设置url列表来区分url

python的httpserver
	python2 BaseHTTPServer
	python3 http.server

pdb调试
通过pdb模块完成调试功能

功能：断点设置 单步调试，进入函数，查看当前代码段
	 查看变量值

	break,b 设置断点
	continue,c 继续执行
	list,l 查看当前代码段
	step,s 进入函数
	exit,q 退出
	next,n 执行下一行
	pp     打印变量
	help   帮助

使用pdb模式运行程序
python3 -m pdb test.py

*从第一行即进入pdb模式


