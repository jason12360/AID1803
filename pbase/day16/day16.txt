day15回顾：
迭代器和生成器
什么是迭代器
    iter(可迭代对象) 返回的对象是迭代器
    可以用next(迭代器)访问可迭代对象

for 语句实质是while,next,iter的组合

生成器：
    两种：
        生成器函数
        生成器表达式
生成器函数内部必须要有yield语句
    def fx():
        yield 语句

yield 语句
    格式：
        yield 表达式

    yield返回的数据将传递给next(it)

生成器表达式：
    语法：
        (x for x in 可迭代对象 if 条件判断表达式)

迭代工具函数：
    zip(iter1,iter2)
    enumerate(iter,start = 0)

enumerate 示例：
    L= [3,9,7,5,1,5,4,8]
    for n,e in enumerate(L):
        print('索引：',n,'对应的值是',e)

字节串bytes 字节数组bytearray
    不可变的 ----> 可变的
    tuple         list
    forzenset     set
    bytes         bytearray

b'hello' #字面值
bytes()                        -------->   bytearray
bytes(整形可迭代对象)            -------->   bytearray(整形可迭代对象)  
                                           整形可迭代对象可是字节串
bytes(整数n)                    -------->   bytearray(整数n)
bytes(字符串,encoding = 'utf-8')-------->   bytearray(字符串,encoding = 'utf-8')

字节串和字节数组的运算

_______________________________________________________________________________


day16 笔记：
bytearray 的方法：
    BA代表bytearray
    BA.clear()         清空字节数组
    BA.append(n)       追加一个字节（n为0-255的整数）
    BA.remove(value)   
    删除第一个出现的字节，如果没有出现，则触发ValueError错误
    BA.reverse() 字节的顺序反转
    BA.decode(endcoding = 'utf-8')
    将bytearray转换为字符串
    BA.find(sub[,start[,end]])查找sub子节数数组

文件：
    什么是文件
        文件是用于数据存储的单位
        文件通常用来长期存储设置
        文件中的数据以字节为单位进行顺序存储的

    内存的读写速度快/磁盘的读写速度慢

文件的操作步骤：
    打开文件
    读写文件
    关闭文件

文件的打开函数 open
    open(file,mode = 'rt') 用于打开一个文件，返回此文件流对象，如果打开失败会触发IOError错误
文件的关闭方法：
    F.close() #关闭文件，释放系统资源

示例见：
    file_open.py

文件的操作分为两种类型的操作：
    文本文件操作
    二进制文件操作

文本文件模式：
    mode = 't'
    1.默认文件中存储的内容为字符数据，以行为单位读取，采用系统默认的换行符进行分割
    2.对于文本文件的读写，需要用字符串(str)进行读取和写入数据

各操作系统默认的换行符：
    Linux 换行符 '\n'
    Windows 换行符 '\r\n'
    Unix 换行符 '\n'

练习：
    将如下数据用文本编辑器sublime写入的data.txt文件中
    数据如下：
        小张 13888888888
        小李 13999999999
        小赵 13666666666
    写程序读取数据，打印姓名和电话，格式如下：
    姓名：小张，电话：13888888888

    见 read_data.py


练习：
1.写一个程序读入任意行文字信息，当输入空行时结束输入，将读入的字符串存于列表中然后将列表的内容写入文件input.txt中
2.写一个程序，从input.txt中读取之前输入的数据，存入列表藏獒能再加上行号进行打印

二进制文件的操作
打开模式
默认文件中存储的都是以字节为单位的二进制数据，通常有人为规定的格式，需要以字节单位进行读写
对二进制文件的读写，需要用字节串(bytes)进行操作

F.read(n) n 代表最大字节数
F.readline()
F.readlines()
对于二进制文件f.read()和f.readline()返回字节串
F.readlines返回字节串列表

f.write(x) 返回写入字节的个数

F.seek(offset,whence = 0)函数
offset 偏移量
    大于0的数代表向文件末尾方向移动
    小于0的数代表向文件头方向移动
whence 相对位置
    0 代表从文件头开始便宜
    1 地表当前位置开始偏移
    2 代表从文件尾开始偏移

示例见：
    seek.py

汉字编码：
    国标系列：
        GB18030(2字节或4字节编码，共27533)
            GBK(2字节，共21003)
                GB2312(2字节，共6763)
    （常用于windows)
    国际标准：
        UNICODE16/UNICODE32 <<---->> UTF-8 (8-bit Unicode transformation format)
        (常用于除windows的设备)
编码字符串：
    'gb2312'
    'gbk'
    'gb18030'
    'utf-8'
    'ascii'
    用于encode和decode方法中

编码注释：
    在源文件的第一行或第二行写入如下格式的内容
    #-*- coding:gbk -*-
    或
    #-*- coding:utf-8 -*-
    是告诉python3解释执行器当前文件的编码是什么


练习：
    1.修改原来学生管理系统的代码，将其分为模块
        建议：
            1.把显示菜单放在一个模块内
            2.把对学生的操作放在一个模块内
            3.把主事件放在一个模块内
    2.在菜单上添加两个功能：
        9)保存学生信息（si.txt)
        10)在文件中读取数据(si.txt)
        建议用','分割数据
            file: si.txt
        xiaozhang,21,98
        xiaoli,22,100
        ...
    



