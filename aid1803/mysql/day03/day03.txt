like用法：
_ 匹配单个字符
% 匹配0个字符
正则匹配：
1.select ... where 字段名 regexp "正则表达式"
2.正则表达式的符号
    ""：包含""中的所有内容
        regexp "abc" 匹配包含abc的记录
    []:包含其中任意一个字符
        regexp "[abc]" 匹配包含a,b,c的记录中的任意一个或多个
    ^: ^a表示以a开头
    $: a$表示以a结尾
    .: 表示任意一个字符
    *: 匹配0个或者多个前面的是实例
        x*:匹配任意数量的x字符
        司马*：匹配 司 +（0个或者多个马)
    mysql 5.7.21版本中，正则表达式中.匹配的是字节
    mysql 8.0...版本中，正则表达式中.匹配的是字符

-------------------------------------------------------------------------------
Mysql - day 03
1.索引分类
    1.普通索引(index)
        1.使用规则
            1.一个表中可以有多个index字段
            2.字段的值可以有重复，也可以为NULL值
            3.经常把做查询条件的字段设置为index字段
            4.index字段的key标志为：MUL
        2.创建
            1.创建表时创建index
                create table t1(
                ... ...,
                ... ...,
                index(id),
                index(name)
                )
            2.在已有表中添加索引字段
                create index 索引名 on 表名(字段名);
        3.查看普通索引
            1.desc 表名; --> 查看key标志为MUL
            2.show index from 表名;
        4.删除
            drop index 索引名 on 表名
            注意：
                删除普通索引只能一个一个删除
    2.唯一索引(unique)
        1.使用规则
            1.一个表中可以有多个index字段
            2.unique字段的值不可以有重复，可以为NULL值
            4.unique字段的key标志为：UNI
        2.创建
            1.创建表时创建unique
                create table t1(
                ... ...,
                ... ...,
                unique(id),
                unique(name)
                )
            2.在已有表中添加索引字段
                create unique index索引名 on 表名(字段名);
        3.查看普通索引
            1.desc 表名; --> 查看key标志为MUL
            2.show index from 表名;
        4.删除
            drop index 索引名 on 表名
    3.主键索引(primary key) && 自增长属性（auto_increment）
        1.使用规则
            1.一个表中只能有一个主键字段
            *2.对应字段的值不允许重复且不能为空值NULL
            3.主键字段的key标志为PRI
            4.把表中能够唯一表识一条记录的字段设置为主键，通常把表中记录编号的字段设置为主键
        2.创建主键(PRI)
            1.在创建表时创建
                1.字段名 数据类型 primary key auto_increment
                2.字段名 auto_increment,
                  primary key(字段名) 也可以 primary key(id,name) 复合主键
                3.id int auto_increment,
                    ...
                  primary key(id))auto_increment = 10000;
            2.在已有表中添加主键
                alter table 表名 add primary key(字段名);
        3.删除主键
            1.先删除自增长属性(modify)
                alter table 表名 modify id int;
            2.删除主键
                alter table 表名 drop primary key;
    4.外键索引
        1.定义：
            让当前表字段的值在另一表的范围内选择
        2.语法格式：
            foreign key(参考字段名)
            references 被参考表名(被参考字段名)
            on delete 级联动作
            on update 级联动作
        3.案例
            表1.缴费信息表（财务）
            学号  姓名     班级     缴费金额 
            1    唐伯虎   AID01   28000
            2    点秋香   AID01   20000
            表2.学生信息表（班主任）
            学号  姓名     缴费金额
            1    唐伯虎    28000
            2    点秋香    20000
            如添加   3    祝枝山    22000，则报错
        4.级联动作
            1.cascade：数据更新
                当主表删除记录或者更新被参考字段的值时，从表会级联更新
            2.restrict 默认
                1.当删除主表记录时，如果从表中有相关联记录则不允许主表删除
                2.更新同理
            3.set null 
                1.当主表中删除记录时，从表中相关联记录的参考字段值自动设置为NULL
                2.更新同理
            4.no action
                on delete no action
                on update no action
                同restrict,都是立即检查外键限制
        5.删除外键
            alter table 表名 drop foreign key 外键名;
            1.外键名的查看方式
                show create table 表名；
        6.在已有表中添加外键
            ## 会收到表中原有数据的限制
            alter table 表名 add foreign key(参考字段名) references 被参考表名（被参考字段名)
            on delete 级联动作
            on update 级联动作
        7.外键使用规则
            1.两张表被参考字段和参考字段数据类型要一致
            2.被参考字段必须是key的一种，通常是primary key
2.数据导入
    1. 作用：把文件系统的内容导入到数据库中
    2. 语法
        load data infile "文件名"
        into table 表名
        fields terminated by "分隔符"
        lines terminated by "\n"
    3.示例
        把 /etc/passwd 中的内容导入到 day03库下的userinfo 表中 
        tarena: x : 1000 :1000:tarena,,,:/home/tarena:/bin/bash 
        用户名  密码  UID   GID  用户描述    用户主目录    登录权限
    4.操作步骤
        1.在数据库中创建对应的表
        2.将要导入的文件拷贝到数据库的默认搜索路径中
            1.查看数据库的默认搜索路径
                show variables like "secure%"
                '/var/lib/mysql-files/'
            2.sudo cp /etc/passwd /var/lib/mysql-files
        3.执行导入语句
            load data infile "/var/lib/mysql-files/passwd"
            into table userinfo
            fields terminated by ":"
            lines terminated by "\n";
3.数据导出
    1.作用
        将数据库表中的记录保存到系统文件里
    2.语法格式
        select ... from 表名
        into outfile "文件名"
        fields terminated by "分隔符"
        lines terminated by "分隔符"
    3.示例
        把userinfo 表中的username\password 和uid导出到文件 user.txt
    4.注意
        1.导出的内容由SQL查询语句决定
        2.执行导出命令时路径必须指定对应的数据库搜索路径

4.表的复制
    1.语法格式
        create table  表名 select 查询命令
    2.示例
        1.复制userinfo表中的全部记录，userinfo2
        2.赋值userinfo表中的用户名，密码，uid 的 第2-10条记录
    3.复制表结构
        create table 表名 select 查询命令 where false;
    4.注意
        复制表的时候不会把原有表的key属性复制过来

5.嵌套查询（子查询）
    1.定义
        把内层查询结果作为外层的查询条件
    2.示例
        1.把uid的值小于uid平均值的用户名和uid号显示出来

6.连接查询
    1.内连接
        1.定义
            从表中删除与其他被连接的表中没有匹配到的行
        2.语法格式
            select 字段名列表 from 表1
            inner join 表2 on 条件 inner join 表3 on 条件
        3.示例
            1.显示省市的详细信息
            2.显示省市县详细信息       
    2.外连接
        1.左连接
            1.定义
                以左表为主显示查询结果
            2.语法格式
                select 字段名列表 from 表1 left join 表2 on条件
            示例：
                1.显示省市的详细信息
                2.显示省市区县的详细信息
                3.显示省市区详细信息要求市全部显示
        2.右连接

7.多表查询
    1.select 字段名列表 from 表名列表; #笛卡尔积
    2.select 字段名列表 from 表名列表 where 条件 等同于 内连接



