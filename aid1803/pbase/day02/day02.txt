 Day01回顾

python解释器：Cpython，Jpython，IronPython

文件名最好用标识符的命名方法：字母或者下划线开头，后面接数字，字母，或者下划线

注释方法：#

数字类型：整形（int），浮点型（float），复数（complex），布尔类型（Bool，True，False）

整数的字面值表示方式：
1000 +2000

十进制
八进制0o
十六进制0x
二进制0b

内置的空值对象None
a = None


表达式：运行后一定会返回一个对象

运算符：1.算数运算符：+，-，×，/，//，%，**
       2. 优先级：（）表达式，幂运算，其他 ，加减
       3. 比较运算符：>,<,>=,<=,!=,==
       4. 比较运算符返回True或者False

变量：1.命名规则，字母或者下划线开头，后面接数字，字母，或者下划线 
		正则表达式：[a-zA-Z][a-zA-Z0-9_]*
	关键字： True Flase None is not del
     2.赋值：=
     3.is/is not 判断两个变量绑定的是否是同一个对象
     4.id（对象） 返回对象在内存中所占的地址
     5.删除变量：del语句，可以解除变量和对象的绑定关系（del（a，b））
     6.复合赋值语句：+=，-+，...

函数：1.int(),float(),complex(),bool()
     2.函数的调用方法：函数名（参数）
     3.bool(x)类型返回False的情况：'',0,0+0j,0.0,None,False,[],{}
     4.内置函数：abs(),round(),pow(x,y,z=None)
     5.查看函数help（函数名）
     6.基本输入输出函数：
        a.输入函数：
          n=input('提示信息')
          注意：这个n是字符串类型，如果要转为整形，必须要强转n=int(n)
        b.输出函数
          print(value1,value2,...,sep=' ',end='\n',flush=false,file=sys.stdout)

如何换行：
    显示换行：\
    隐式换行：(),[],{}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Day02

if语句
作用：
    让程序根据条件有选择性的执行某条语句或某些语句
语法：
    if 真值表达式1：
        语句1...
    elif 真值表达式2：
        语句2...
    ...
    else:
        语句3

语法说明：
    
    1.所有的真值表达式自上而下依次判断，只要有一个为真值，则执行内部语句，然后结束当前的if语句的执行。如果所有真值表达式为False，则执行else 子句里的语句。
    2.elif子句可以有0个，1个，或者而多个
    3.else子句可以有一个，又可以没有，而且只能放在最后

示例：
    #请输入一个正整数判断这个数字是奇数还是偶数
    见：if.py
        n = int(input('请输入一个整数'))
        if n % 2 == 1:
            print(n,'这个数字是奇数')
        else:
            print(n,'这个数字是偶数')
    #请输入一个整数判断这个数字是正数还是负数还是0
    见：if2.py
        n = int(input('请输入一个整数'))
        if n > 0:
            print(n,'这个数字是正数')
        elif n < 0:
            print(n,'这个数字是负数')
        else:
            print(n,'这个数字是0')
    练习：
        输入一个季度1~4，输出这个季度有哪几个月，如果输入的不是1~4，提示用户“您输入的不正确”
    
        n = int(input('请输入一个季度:\n1代表第一季度\n2代表第二季度\n3代表第三季度\n4代表第四季度\n'))
        if n == 1:
            print(n,'季度有一月，二月，三月')
        elif n == 2:
            print(n,'季度有四月，五月，六月')
        elif n == 3:
            print(n,'季度有七月，八月，九月')
        elif n == 4:
            print(n,'季度有十月，十一月，十二月')
        else:
            print('你输入的不正确')

if语句的嵌套
    if语句本身是由多条语句组成的一条复合语句
    if语句可以作为语句嵌套到另一个语句的内部
    见if3.py

条件表达式
    语法：
        表达式1 if 真值表达式  else 表达式2
    示例：
        2 if 3 > 1 else 5 ==> 2   
    作用：
        根据真值表达式返回的结果来确定是执行表达式1还是表达式2，并返回结果
        见 if_else_express.py

练习：1.输入一个数字，打印这个数字的绝对值（要求用条件表达式，不允许用abs函数）
    a = int(input('请输入一个整数'))
    b = a if a > 0 else -a
    print(a,'绝对值是',b)
    

pass语句
作用：
    通常用来填充空白
    又名空语句
示例：
    判断一个学生成绩，如果不在0~100之间，就提示：不合法的输入，否则就是啥也不提示
        score = int(input('请输入分数'))
        if 0 <= score <= 100:
            pass
        else:
            print('不合法的输入')
练习：
    北京出租计价器算法
        收费标准
        1）3公里以内13元
        2）超出3公里以外，每公里基本单价2.3元/公里
        3）空驾费：超过15公里后，每公里加收单价50%空驾费
        要求输入公里数，打印费用金额（以元为单位四舍五入）

        好方法：
            if k > 0:
                money = 13
            if k > 3:
                money +=(k - 3) * 2.3
            if k > 15:
                money +=(k - 15) * 0.5 * 2.3

Bool运算
    运算符：
        and 与运算
            语法：
                x and y
            注意：x和y是表达式
            作用：
                优先返回假值对象
                当x的布尔值为假(False)时，返回x，否则返回y。
            示例：
                1 and 0 ==> 0
                1 and 2 ==> 2
                0 and 1 ==> 0
                0 and None ==> 0

        or  或运算
            语法：
                x or y
            作用：
                优先返回真值对象
                当x的布尔值为真(True)时，返回x，否则返回y。
            示例：
                None or 0 ==> 0

        not 非运算
            语法：
                not x     #x 表示一个值
            作用：
                对x进行布尔取非运算，如bool(x)为True，则返回False，否则返回True
            示例：
                not True  ==> False
                not False ==> True
思考：
    s= input('请输入学生成绩：') or '0'
    score = int(s)
    #请问以上加or是做什么？
    print(score)

    答：当用户未输入时，默认为0

练习：
    输入一个成绩，如果成绩在0~100则合法，否则提示”您的输入有误“。
        score = int(input('请输入一个成绩'))
        if score >= 0 and score <= 100:
            pass
        else:
            print('您的输入有误')
练习：
    1.BMI值计算
        BMI = 体重（公斤）/身高（米）平方
        BMI<18.5     体重过轻
        18.5<=BMI<24 正常
        BMI>=24      异常范围
        如：BMI = 69/1.73*1.73
        要求输入身高，体重，打印BMI值情况
    2.输入三个学生的成绩，
        打印出最高分是多少？
        打印出最低分是多少？
        打印出平均分是多少？
    3.给一个年份，判断是否是闰年并打印
        每四年一闰，每百年不闰，每四百年又闰

正负号运算符
    +
    -
    示例：
        a= 5
        b= -a
    位运算
        bit（位）
        byte（字节）
        1byte = 8bits
    运算符
        & 位与
        | 位或
        ^ 位异或
        << 位左移
        >> 位右移

& 位与
格式：
    表达式1 & 表达式2
作用：
    按位操作：
        两个对应的位是1，则结果为1
        两个对应的位只要有一个位0，则结果为0
    示例：10&12 = 8

|位或
格式：
    表达式1 | 表达式2
作用：
    按位操作：
        两个对应的位是0，则结果为0
        两个对应的位只要有一个位1，则结果为1
    示例：10|12 = 14

^位异或
格式：
    表达式1^表达式2
作用：
   按位操作：
        两个对应的位不同，则结果为1
        两个对应的位相同，则结果为0
    示例：
        10^12 = 6

<< 位左移
格式：
    表达式x << 表达式y
作用： 
    将x的二进制，按位左移y位，低位补0
    示例：
        0b110 << 1

<< 位右移
格式：
    表达式x >> 表达式y
作用： 
    将x的二进制，按位右移y位，低位溢出抹去
    示例：
        0b110 << 1

~ 取反
格式：
    ~表达式
说明： 
    -1取反为0
    0取反为1
    计算机的负数使用补码形式表示的， 符号位不变其他为取反+1

字符串：
print('hello world')
作用:
    记录文本信息
字符串的表示方法：
    ''单引号
    ”“双引号
    ”“”“”“三引号
单引号和双引号的区别：
    单引号内的双引号不算结束符
    反之也成立
    双引号的单引号不算字符串的结束符
三引号字符串：
    “”“”“”开头和结尾的字符串
作用：
    1.三引号字符串可以包含单个的单引号和双引号
    2.三引号字符串中的换行会自动转换为换行符（\n)
    例如：第一节课里打印的三层**
    print('''
             *
            ***
           *****    
    ''')

隐式字符串的拼接
    s="I'm a teacher"'name is "tanyang"'
用转义序列代表特殊字符
    字符串字面值中，常用反斜杠\后跟一些字符来代表特殊字符
    \' 代表一个单引号
    \" 代表一个双引号
    \n 代表换行
    \\ 代表\
    \r 返回光标至行首
    \t 水平制表符
    \v 垂直制表符
    \b 倒退  backspace
    \0 空字符，字符值为0
    \o00 00为八进制表示的字符
    \x00 00 为16进制表示的字符
    \uXXX Unicode16的16进制表示的字符
    \UXXXXXXX Unicode32的16进制表示好的字符

ASCII编码
    ascii字符串
    $ man ascii
常用的ASCII编码
    字符                十进制            十六进制
    '0'                  48                0x30
    'A'                  65                0x41
    'a'                  97                0x61 
    '\0'                 0                 0x00
    '\n'                 10                0x0A
练习:
    试想一下，如下字符串由几个字符组成
    ‘abcd123’     7
    ‘\"4"'        3
    '\"A56'       4
    '\bc\td\n'    5

UNICODE编码：
    全世界字符统一编码
        分类：
            UNICODE16(两个字节表示)
            UNICODE32(四个字节表示)
        

