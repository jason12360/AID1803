day02回顾
if 语句
    语法：   if 真值表达式1：
                语句1
            elif 真值表达式2：
                语句2
                ...
            else 真值表达式2：
                语句3
    嵌套语法：   if 真值表达式1：
                if 真值表达式2：
                    语句1
                ...
            ...

    条件表达式：
        格式：
            表达式1 if 真值表达式 else 表达式2
        作用：如果真值表达式为True，返回表达式1，否则返回表达式2

    pass语句：
        作用：占位

布尔运算：  
        and or not
        and: 表达式x and 表达式y，优先返回价值对象 
            1 and 2 = 2
            0 and 1 = 0
        or: 表达式x or 表达式y，优先返回真值对象
            1 or 0 = 1
            0 or 2 = 2
        not:
            not x
            如果x为True，那么结果为False，否则为True

位运算符：
    &（位与）：两者对应的位都为1，则为1
    |（位或）: 两者对应的位都为0，则为0
    ^（位异或）：两者对应位，如果相同则为0，不同则为1
    >> （右移）：8 >> 2 = 2
    << （左移）：2 << 2 = 8
    ~  （取反）：~0 = -1

字符串：
    表示方法：
        '',"",'''''',""""""
    隐式字符串的拼接
        s = "I'm a teacher"'name is "tanyang"'
        print(s) # I'm a teacher name is "tanyang"      
    转义字符(\)：
        \',\",\\,\n,\r,\t,\v,\b,\0,\o00,\xXX,\uXXXX,\UXXXXXXXX

    ASCII编码：
        man ascii
        0      48
        a      97
        A      65
    len(x) 返回字符个数


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day03
字符串：str
    作用：
        用来记录文本信息
    字面值表示方法：
        用引号括起来的部分都是字符串
        '     单引号
        "     双引号
        '''   三单引号
        """   三双引号
    字符串的字面值表示方式：
        ''
        ""
        ''''''
        """"""
    非空字符串的字面值表示方式：
        'hello'
        "hello"
        '''hello'''
        """hello"""

    单引号和双引号的区别：
        单引号内的双引号不算结束符
        反之也成立
        双引号的单引号不算字符串的结束符



raw 字符串(原始字符串)
    格式:
        r'字符串内容'
        r"字符串内容"
        r'''字符串内容'''
        r"""字符串内容"""
    作用：
        让转义字符\无效
    示例：
        path:'c:/newfile/test.py'
        
        s = 'c:/newfile/test.py'
        print(s)
        ==>
        c:
        ewfile  est.py
        
        
        s = r'c:/newfile/test.py'
        print(s)
        ==>
        'c:/newfile/test.py'

字符串的运算：
    + += * *=
    +加号：字符串的拼接
        示例：'a'+'b'='ab'
    +=用于原字符串与右侧字符串拼接生成新字符串，同时用原变量绑定，变量地址不变
        a += b
    * 生成重复的字符串
        a='123'
        a * 3
        '123123123'
    *= 生成重复的字符串，同时用原变量绑定，变量地址会改变、
        a='*'
        a*=2   a = '**'
练习：
    写一个程序，打印一个高度为4的矩形，输出此矩形
    要求：
        输入一个整数，此整数代表矩形的宽度，输出此矩形
        如：
            请输入矩形宽度：10
        ××××××××××
        ×        ×
        ×        ×
        ××××××××××
        答案见day03practise01.py

字符串的运算符：
    < <= > >= == != 
    示例：
        'a'>'b'    #False
        'abcd'>'b' #False   先比较第一位，如一样，比较第二位，以此类推
        '5'>'12'   #True    '5'的ascii比'1'大
        'abc'>'abd'

in/not in 运算符
作用：
    in 用于序列，字典，集合等容器中，用于判断某个值是否存在与这个容器
    not in 与in运算符的返回结果相反
格式： 
    对象 in/not in 容器
示例： 
    x = 'welcome to china'
    'to' in x       #True
    ’name' in x     # false
    'name' not in i #True

python运算符的优先级
    **幂运算
    ~,+(正号),-(负号)
    */%//
    +,-
    <<, >>
    &
    ^
    |
    < <= > >= == != is, not, not in, in
    not 
    and 
    or
    if-else

字符串的索引操作
    索引 index
        python字符串是不可变的字符序列
    语法：
        字符串[索引(整数表达式)]
    说明：
        序列可以用索引来访问序列中的对象
        序列的正向索引从0开始的，第二个索引为1，...,最后一个索引是len(s)-1
        序列的反向索引从-1开始，-1 代表最后一个，...,第一个是-len(s)
    示例：
        s = 'abcd'
        s[0] #'a'
        s[-1] #'d'
切片 slice
    从字符串序列中取出相应的元素组成一个新的字符串序列
语法：
    s = 'abcd'
    s[（开始索引）:（结束索引）:（步长）]
    注意：小括号里的部分可以省略
说明：
    开始索引是切片切下的起始位置，0代表第一个元素，1代表第二个元素
    结束索引是切片的终止点（但不包含终止点）
    步长是切片每次获取完当前元素后移动的方向和偏移量
        1.没有步长，相当于取值完成后向右移动一个索引的位置（默认为1）
        2.当步长为正整数时，取正向切片，步长代表下一次索引取值的增长量
            正向切片时，默认的起始位置为第一个元素，终止位置为最后一个原素的后一个位置
        3.当不长为负整数时，取反向切片
            反向切片时，默认的起始位置为最后一个元素，终止位置为第一个原素的前一个位置

s='abcd'
s[0:2]   #'ab'
s[:2]    #'ab'
s[::]    #'abcd'
s[1:1]   #''
s[3:1]   #''
s[3::-2] #'db'
s[::-1]  #'dcba'
s[3:4:]  #'d'
s[0::-1] #'a'

输入任意一个字符串，判断这个字符串是否是回文
回文示例：
    上海自来水来自海上
    ABCCBA


常用于序列的函数
len(seq)  返回序列的长度
max(x)    返回序列的最大值
min(x)    返回序列的最小值

字符串编码转换函数
ord(c) 返回一个字符的Unicode值
chr(i) 返回这个值对应的字符

整数装换为字符串函数
bin(i) 将整数转换为二进制的字符串
oct(i) 将整数转换为八进制的字符串
hex(i) 将整数转换为十六进制的字符串

字符串构造函数
    str(obj='')  将对象转换为字符串

字符串的常用方法
s = 'abcd'
s.isdigit()                           判断字符串是否全为数字
s.isalpha()                           判断是否全为字符
s.islower()                           判断是否全为小写
s.isupper()                           判断是否全为大写
s.isspace()                           判断是否全为空格
s.center(width,[fill])                将原字符串居中，左右默认填充空格
s.count(sub[,start[,end]])            获取字符串中子串的个数
s.find(sub[,start[,end]])             获取字符串中子串sub的索引，失败返回-1
s.strip()                             返回去掉左右空白字符串的字符串
s.lstrip()                            返回去掉左空白字符串的字符串
s.rstrip()                            返回去掉右空白字符串的字符串
s.upper()                             生成将英文字符转换为大写的字符串 
s.lower()                             生成将英文字符转换为小写的字符串
s.replace(old,new[,count])            在字符串中用新的子串来替代旧的
注：
    空白字符：指的是空格，水平制表符(\t),换行(\n)等不可见字符

练习：
    输入一个字符串
    1.判断您输入的字符串的有几个字符'e'
    2.判断您输入的有几个空格
    3.判断您输入的字符串是否以问号'？'结尾




字符串的格式化表达式
    运算符 %
    作用：
        生成一定格式的字符串
    语法格式：
        格式化字符串 % 参数值
        格式化字符串 %（参数值1，参数值2，...)
    示例
        fmt='姓名：%s，年龄：%d'%(xm,18)
    格式化字符串的占位符（%）的类型码
    %s                           字符串（用str函数返回的字符串）
    %r                           字符串（用repr函数返回的字符串）
    %c                           整数转换为单个字符
        >>> '%c'%20013
        '中'
    %d                           十进制整数
    %o                           八进制整数
    %x                           十六进制整数(a-f)
    %X                           十六进制整数(A-F)
    %e/%E                        指数型浮点数（分别对应大小写）
        >>> '%e'%2012222299912
        '2.012222e+12'
    %f/%F                        浮点型十进制形式
    %g/%G                        十进制形式浮点或指数浮点自动转换
    %%                           代表一个百分号
    
    占位符%和类型码之间的格式语法
    %[格式语法]类型码(d,s,f等)
    语法格式：
        - 左对齐                    
        + 显示正负号
        0 补零
        宽度
        宽度.精度
    示例：
        "%10d"%123      #'       123'
        "%-10d"%123     #'123       '
        "%10s"%"abc"    #'       abc'
        "%-5s"%"abc"    #'abc  '
        "%+10s"%"123"   #'      +123'
        "%010d"%123     #'0000000123'
        "%.2f"%3.1415926535897932     #'3.14'
        "%7.2f"%3.1415926535897932     #'   3.14'


练习：
    输入三行文字，让这三行文字依次输出为右对齐
    请输入第一行：hello world
    请输入第二行：world
    请输入第三行：a
    结果为：
    hello world
          world
              a

    思考：
        将上述程序输入三行进行居中显示，宽度以最大宽度为准
见day03practise03.py
可变参数类型码： '%*s'%(n,s)
n代替*
s代替s

循环语句
    while
    for 语句
while 语句
作用：
    根据一定条件重复的执行一条或多条语句
语法:
    while 真值表达式：
        语句块1
    else
        语句块2
语法说明
    1.先执行真值表达式，测试布尔值为True或False
    2.如果真值表达式为True，则执行语句块1，然后在返回到第一步进行测试
    3.如果真值表达式为False，则执行else子语句2，然后结束while语句的执行
    注：else部分可以省略
*ctrl+c 强行终止程序

练习：
    1.输入一个数，用变量x绑定，根据x的值打印x行，hello world
    用while语句来做
    2.用while打印1~20之间的整数
    3.用while语句实现打印20~1之间的整数
    见练习

作业：
    1.从程序中输入一个数n
    计算 1+2+...+n
    2.打印1-20的整数，打印在一行显示，每个数字之间用一个空格隔开
        1 2 3 4 5 6 7 8 ... 19 20
    3.打印1-20的整数，每行打印五个，打印四行，如：
    1 2 3 4 5
    6 7 8 9 10
    ...
    提示if语句可以嵌入while中