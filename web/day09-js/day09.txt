流程结构:
	1.顺序结构
	2.分支结构(选择结构)
	3.循环结构

1.分支结构
	1.作用
		根据条件选择某一段代码去执行
	2.if结构
		1.
			if(条件){
				满足条件要执行的代码块
			}

			注意:
				1.if 后的{}是可以省略的,如果省略的话,则只控制该结构下的第一条语句
				2.条件尽量是boolean类型的,如果不是的话,以下的条件当成假运算:
					1.if(0){}
					2.if(0.0){}
					3.if(""){}
					4.if(NaN){}
					5.if(undefined){}
					6.if(null){}
		2.
			if(条件){
				语句块1
			}else{
				语句块2
			}
		3.
			if{
				语句块
			}else if{
				语句块
			}else{
				语句块
			}
		练习:
			日期计算器
			分三次从弹框中录入年,月,日
			计算该日是该年的第几天
	3.switch结构:
		场合:只有在等值判断时可以用switch
		语法:
			switch(变量){
				case值1:
					语句块1
					break;
				case值2:
					语句块2
					break;
				...
				default:
					语句块n
					//只有所有的case块都未匹配上时,才执行default
			}
		注意:
			1.变量和各个case块后面的值,是使用===号方式来判断的
			2.如果case后不增加break的话,则从匹配case开始向下依次执行或碰到break为止
2.循环结构
	1.循环的作用:
		重复的执行相同的或相似的代码
	2.循环二要素
		1)循环条件
		2)循环的操作(循环体)
	3.while循环:
		1)语法:
			while(条件){
				循环体
			}
	4.do...while循环
		1.语法
			do{
				循环体
			}while(条件);
		2.流程:
			1.先执行循环体
			2.判断循环条件
			3.如果条件为真,则继续执行循环操作,否则退出循环
	5.循环的流程控制
		1.break
			用在循环体内,用于跳出整个循环结构
		2.continue
			用在循环体内,用于跳出本次循环,继续执行下次的循环操作
	6.for循环
		for(表达式1;表达式2;表达式3){
			循环操作
		}
		表达式1:循环条件的声明
		表达式2:循环条件的判断
		表达式3:更新循环变量

		流程:
		1.先执行表达式1,声明循环条件(执行1次)
		2.判断表达式2的值,true或false
		3.如果为false,则退出循环

作业:
	在弹框中,分三次输入年月日,判断是星期几
	前提:1900年1月1日 星期一

